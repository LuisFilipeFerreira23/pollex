services:
  postgres:
    image: postgres:18.0-alpine
    container_name: pollex-postgres
    hostname: pollex-postgres
    restart: unless-stopped
    expose:
      - "${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - PGDATA=/var/lib/postgresql/18/docker
      - TZ=${TZ}
    volumes:
      - ${DATA_PATH}/postgres:/var/lib/postgresql/18/docker
    networks:
      - pollex-internal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  api:
    image: ${DOCKER_REGISTRY-}/pollex:latest
    container_name: pollex-api
    hostname: pollex-api
    restart: unless-stopped
    build:
      context: ..
      dockerfile: ./docker/dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - .env
    networks:
      - pollex-internal-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  pollex-internal-network:
    driver: bridge